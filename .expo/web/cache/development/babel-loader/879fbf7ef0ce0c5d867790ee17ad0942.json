{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/khaleef/Practice Session/GuessGame-ReactNative/screens/GameScreen.js\";\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport NumberContainer from \"../components/NumberContainer\";\nimport Card from \"../components/Card\";\nimport Colors from \"../constants/Colors\";\nimport DefaultStyles from \"../constants/Default-Style\";\nimport MainButton from \"../components/MainButton\";\nimport BodyText from \"../components/BodyText\";\n\nvar generateRandomBetween = function generateRandomBetween(min, max, exclude) {\n  min = Math.ceil(min);\n  max = Math.ceil(max);\n  var rndNum = Math.floor(Math.random() * (max - min)) + min;\n\n  if (rndNum === exclude) {\n    return generateRandomBetween(min, max, exclude);\n  } else {\n    return rndNum;\n  }\n};\n\nvar renderListItem = function renderListItem(listLength, itemData) {\n  return React.createElement(View, {\n    style: styles.listItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }\n  }, React.createElement(BodyText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, \"#\", listLength - itemData.index), React.createElement(BodyText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, itemData.item));\n};\n\nvar GameScreen = function GameScreen(props) {\n  var initalGuess = generateRandomBetween(1, 100, props.userChoice);\n\n  var _useState = useState(initalGuess),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentGuess = _useState2[0],\n      setCurrentGuess = _useState2[1];\n\n  var _useState3 = useState([initalGuess.toString()]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pastGuesses = _useState4[0],\n      setPastGuesses = _useState4[1];\n\n  var _useState5 = useState(Dimensions.get(\"window\").width),\n      _useState6 = _slicedToArray(_useState5, 2),\n      availableDeviceWidth = _useState6[0],\n      setAvailableDeviceWidth = _useState6[1];\n\n  var _useState7 = useState(Dimensions.get(\"window\").height),\n      _useState8 = _slicedToArray(_useState7, 2),\n      availableDeviceHeight = _useState8[0],\n      setAvailableDeviceHeight = _useState8[1];\n\n  var currentLow = useRef(1);\n  var currentHigh = useRef(100);\n  var userChoice = props.userChoice,\n      onGameOver = props.onGameOver;\n  useEffect(function () {\n    var updateLayout = function updateLayout() {\n      setAvailableDeviceWidth(Dimensions.get(\"window\").width);\n      setAvailableDeviceHeight(Dimensions.get(\"window\").height);\n    };\n\n    Dimensions.addEventListener(\"change\", updateLayout);\n    return function () {\n      Dimensions.removeEventListener(\"change\", updateLayout);\n    };\n  });\n  useEffect(function () {\n    if (currentGuess === userChoice) {\n      onGameOver(pastGuesses.length);\n    }\n  }, [currentGuess, userChoice, onGameOver]);\n\n  var nextGuessHandler = function nextGuessHandler(direction) {\n    if (direction === \"lower\" && currentGuess < props.userChoice || direction === \"greater\" && currentGuess > props.userChoice) {\n      Alert.alert(\"Don't lie\", \"You know that this is wrong...\", [{\n        text: \"Sorry\",\n        style: \"cancel\"\n      }]);\n      return;\n    }\n\n    if (direction == \"lower\") {\n      currentHigh.current = currentGuess;\n    } else {\n      currentLow.current = currentGuess + 1;\n    }\n\n    var nextNumber = generateRandomBetween(currentLow.current, currentHigh.current, currentGuess);\n    setCurrentGuess(nextNumber);\n    setPastGuesses(function (curPastGuess) {\n      return [nextNumber.toString()].concat(_toConsumableArray(curPastGuess));\n    });\n  };\n\n  var listContainerStyle = styles.listContainer;\n\n  if (availableDeviceWidth < 350) {\n    listContainerStyle = styles.listContainerBig;\n  }\n\n  if (availableDeviceHeight < 500) {\n    return React.createElement(View, {\n      style: styles.screen,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: DefaultStyles.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, \"Opponent's Guess\"), React.createElement(View, {\n      style: styles.controls,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, React.createElement(MainButton, {\n      onPress: nextGuessHandler.bind(_this, \"lower\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, React.createElement(Ionicons, {\n      name: \"md-remove\",\n      size: 24,\n      color: \"white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    })), React.createElement(NumberContainer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, currentGuess), React.createElement(MainButton, {\n      onPress: nextGuessHandler.bind(_this, \"greater\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, React.createElement(Ionicons, {\n      name: \"md-add\",\n      size: 24,\n      color: \"white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }))), React.createElement(View, {\n      style: listContainerStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, React.createElement(FlatList, {\n      keyExtractor: function keyExtractor(item) {\n        return item;\n      },\n      data: pastGuesses,\n      renderItem: renderListItem.bind(_this, pastGuesses.length),\n      contentContainerStyle: styles.list,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: DefaultStyles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, \"Opponent's Guess\"), React.createElement(NumberContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, currentGuess), React.createElement(Card, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, React.createElement(MainButton, {\n    onPress: nextGuessHandler.bind(_this, \"lower\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, React.createElement(Ionicons, {\n    name: \"md-remove\",\n    size: 24,\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  })), React.createElement(MainButton, {\n    onPress: nextGuessHandler.bind(_this, \"greater\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, React.createElement(Ionicons, {\n    name: \"md-add\",\n    size: 24,\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    style: listContainerStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    keyExtractor: function keyExtractor(item) {\n      return item;\n    },\n    data: pastGuesses,\n    renderItem: renderListItem.bind(_this, pastGuesses.length),\n    contentContainerStyle: styles.list,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 10,\n    alignItems: \"center\"\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginTop: Dimensions.get(\"window\").height > 600 ? 20 : 10,\n    width: 400,\n    maxWidth: \"90%\"\n  },\n  controls: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    width: \"80%\",\n    alignItems: \"center\"\n  },\n  listContainer: {\n    width: \"60%\",\n    flex: 1\n  },\n  listContainerBig: {\n    flex: 1,\n    width: \"80%\"\n  },\n  list: {\n    flexGrow: 1,\n    justifyContent: \"flex-end\"\n  },\n  listItem: {\n    borderColor: \"#ccc\",\n    borderWidth: 1,\n    padding: 15,\n    marginVertical: 10,\n    backgroundColor: \"white\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    width: \"100%\"\n  }\n});\nexport default GameScreen;","map":{"version":3,"sources":["/Users/khaleef/Practice Session/GuessGame-ReactNative/screens/GameScreen.js"],"names":["React","useState","useRef","useEffect","Ionicons","NumberContainer","Card","Colors","DefaultStyles","MainButton","BodyText","generateRandomBetween","min","max","exclude","Math","ceil","rndNum","floor","random","renderListItem","listLength","itemData","styles","listItem","index","item","GameScreen","props","initalGuess","userChoice","currentGuess","setCurrentGuess","toString","pastGuesses","setPastGuesses","Dimensions","get","width","availableDeviceWidth","setAvailableDeviceWidth","height","availableDeviceHeight","setAvailableDeviceHeight","currentLow","currentHigh","onGameOver","updateLayout","addEventListener","removeEventListener","length","nextGuessHandler","direction","Alert","alert","text","style","current","nextNumber","curPastGuess","listContainerStyle","listContainer","listContainerBig","screen","title","controls","bind","list","buttonContainer","StyleSheet","create","flex","padding","alignItems","flexDirection","justifyContent","marginTop","maxWidth","flexGrow","borderColor","borderWidth","marginVertical","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Button,\n  Alert,\n  ScrollView,\n  FlatList,\n  Dimensions,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\n//import { ScreenOrientation } from \"expo\";\n\nimport NumberContainer from \"../components/NumberContainer\";\nimport Card from \"../components/Card\";\nimport Colors from \"../constants/Colors\";\nimport DefaultStyles from \"../constants/Default-Style\";\nimport MainButton from \"../components/MainButton\";\nimport BodyText from \"../components/BodyText\";\n\nconst generateRandomBetween = (min, max, exclude) => {\n  min = Math.ceil(min);\n  max = Math.ceil(max);\n  const rndNum = Math.floor(Math.random() * (max - min)) + min;\n  if (rndNum === exclude) {\n    return generateRandomBetween(min, max, exclude);\n  } else {\n    return rndNum;\n  }\n};\n\n//itemData is default argument passed in the function\nconst renderListItem = (listLength, itemData) => (\n  <View style={styles.listItem}>\n    <BodyText>#{listLength - itemData.index}</BodyText>\n    <BodyText>{itemData.item}</BodyText>\n  </View>\n);\n\nconst GameScreen = (props) => {\n  //ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.PORTRAIT);\n\n  const initalGuess = generateRandomBetween(1, 100, props.userChoice);\n  const [currentGuess, setCurrentGuess] = useState(initalGuess);\n  const [pastGuesses, setPastGuesses] = useState([initalGuess.toString()]);\n  const [availableDeviceWidth, setAvailableDeviceWidth] = useState(\n    Dimensions.get(\"window\").width\n  );\n  const [availableDeviceHeight, setAvailableDeviceHeight] = useState(\n    Dimensions.get(\"window\").height\n  );\n  const currentLow = useRef(1);\n  const currentHigh = useRef(100);\n\n  const { userChoice, onGameOver } = props; //array destructuring: get these values out of them\n\n  useEffect(() => {\n    const updateLayout = () => {\n      setAvailableDeviceWidth(Dimensions.get(\"window\").width);\n      setAvailableDeviceHeight(Dimensions.get(\"window\").height);\n    };\n\n    Dimensions.addEventListener(\"change\", updateLayout);\n\n    return () => {\n      Dimensions.removeEventListener(\"change\", updateLayout);\n    };\n  });\n\n  useEffect(() => {\n    if (currentGuess === userChoice) {\n      onGameOver(pastGuesses.length);\n    }\n  }, [currentGuess, userChoice, onGameOver]);\n\n  const nextGuessHandler = (direction) => {\n    if (\n      (direction === \"lower\" && currentGuess < props.userChoice) ||\n      (direction === \"greater\" && currentGuess > props.userChoice)\n    ) {\n      Alert.alert(\"Don't lie\", \"You know that this is wrong...\", [\n        { text: \"Sorry\", style: \"cancel\" },\n      ]);\n      return;\n    }\n    if (direction == \"lower\") {\n      currentHigh.current = currentGuess;\n    } else {\n      currentLow.current = currentGuess + 1;\n    }\n    let nextNumber = generateRandomBetween(\n      currentLow.current,\n      currentHigh.current,\n      currentGuess\n    );\n    setCurrentGuess(nextNumber);\n    //setRounds((curRounds) => curRounds + 1);\n    setPastGuesses((curPastGuess) => [nextNumber.toString(), ...curPastGuess]);\n  };\n\n  let listContainerStyle = styles.listContainer;\n  if (availableDeviceWidth < 350) {\n    listContainerStyle = styles.listContainerBig;\n  }\n\n  if (availableDeviceHeight < 500) {\n    return (\n      <View style={styles.screen}>\n        <Text style={DefaultStyles.title}>Opponent's Guess</Text>\n        <View style={styles.controls}>\n          <MainButton onPress={nextGuessHandler.bind(this, \"lower\")}>\n            <Ionicons name=\"md-remove\" size={24} color=\"white\" />\n          </MainButton>\n          <NumberContainer>{currentGuess}</NumberContainer>\n          <MainButton onPress={nextGuessHandler.bind(this, \"greater\")}>\n            <Ionicons name=\"md-add\" size={24} color=\"white\" />\n          </MainButton>\n        </View>\n        <View style={listContainerStyle}>\n          {/* <ScrollView contentContainerStyle={styles.list}>\n          {pastGuesses.map((guess, index) => renderListItem(guess, pastGuesses.length - index))}\n        </ScrollView> */}\n          <FlatList\n            keyExtractor={(item) => item}\n            data={pastGuesses}\n            renderItem={renderListItem.bind(this, pastGuesses.length)}\n            contentContainerStyle={styles.list}\n          />\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.screen}>\n      <Text style={DefaultStyles.title}>Opponent's Guess</Text>\n      <NumberContainer>{currentGuess}</NumberContainer>\n      <Card style={styles.buttonContainer}>\n        <MainButton onPress={nextGuessHandler.bind(this, \"lower\")}>\n          <Ionicons name=\"md-remove\" size={24} color=\"white\" />\n        </MainButton>\n        <MainButton onPress={nextGuessHandler.bind(this, \"greater\")}>\n          <Ionicons name=\"md-add\" size={24} color=\"white\" />\n        </MainButton>\n      </Card>\n      <View style={listContainerStyle}>\n        {/* <ScrollView contentContainerStyle={styles.list}>\n          {pastGuesses.map((guess, index) => renderListItem(guess, pastGuesses.length - index))}\n        </ScrollView> */}\n        <FlatList\n          keyExtractor={(item) => item}\n          data={pastGuesses}\n          renderItem={renderListItem.bind(this, pastGuesses.length)}\n          contentContainerStyle={styles.list}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 10,\n    alignItems: \"center\",\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginTop: Dimensions.get(\"window\").height > 600 ? 20 : 10,\n    width: 400,\n    maxWidth: \"90%\",\n  },\n  controls: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    width: \"80%\",\n    alignItems: \"center\",\n  },\n  listContainer: {\n    width: \"60%\",\n    flex: 1, //fix on android\n  },\n  listContainerBig: {\n    flex: 1,\n    width: \"80%\",\n  },\n  list: {\n    flexGrow: 1,\n    //alignItems: 'center',\n    justifyContent: \"flex-end\",\n  },\n  listItem: {\n    borderColor: \"#ccc\",\n    borderWidth: 1,\n    padding: 15,\n    marginVertical: 10,\n    backgroundColor: \"white\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    width: \"100%\",\n  },\n});\n\nexport default GameScreen;\n"]},"metadata":{},"sourceType":"module"}