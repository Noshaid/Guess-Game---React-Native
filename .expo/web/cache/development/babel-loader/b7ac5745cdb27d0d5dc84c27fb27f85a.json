{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/khaleef/Practice Session/GuessGame-ReactNative/screens/StartGameScreen.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Card from \"../components/Card\";\nimport Input from \"../components/Input\";\nimport NumberContainer from \"../components/NumberContainer\";\nimport Colors from \"../constants/Colors\";\nimport BodyText from \"../components/BodyText\";\nimport MainButton from \"../components/MainButton\";\n\nvar StartGameScreen = function StartGameScreen(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredValue = _useState2[0],\n      setEnteredValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      confirmed = _useState4[0],\n      setConfirmed = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedNumber = _useState6[0],\n      setSelectedNumber = _useState6[1];\n\n  var _useState7 = useState(Dimensions.get(\"window\").width / 4),\n      _useState8 = _slicedToArray(_useState7, 2),\n      buttonWidth = _useState8[0],\n      setbuttonWidth = _useState8[1];\n\n  var numberInputHandler = function numberInputHandler(intputText) {\n    setEnteredValue(intputText.replace(/[^0-9]/g, \"\"));\n  };\n\n  var resetInputHandler = function resetInputHandler() {\n    setEnteredValue(\"\");\n    setConfirmed(false);\n  };\n\n  useEffect(function () {\n    var updateLayout = function updateLayout() {\n      setbuttonWidth(Dimensions.get(\"window\").width / 4);\n    };\n\n    Dimensions.addEventListener('change', updateLayout);\n    return function () {\n      Dimensions.removeEventListener('change', updateLayout);\n    };\n  });\n\n  var confirmInputHandler = function confirmInputHandler() {\n    var chosenNumber = parseInt(enteredValue);\n\n    if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\n      Alert.alert(\"Invalid Number\", \"Number has to be a number between 1 and 99.\", [{\n        text: \"OK\",\n        style: \"destructive\",\n        onPress: resetInputHandler\n      }]);\n      return;\n    }\n\n    setConfirmed(true);\n    setSelectedNumber(chosenNumber);\n    setEnteredValue(\"\");\n    Keyboard.dismiss();\n  };\n\n  var confirmedOutput;\n\n  if (confirmed) {\n    confirmedOutput = React.createElement(Card, {\n      style: styles.summaryContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, React.createElement(BodyText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, \"You Selected\"), React.createElement(NumberContainer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, selectedNumber), React.createElement(MainButton, {\n      onPress: function onPress() {\n        return props.onStartGame(selectedNumber);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, \"START GAME\"));\n  }\n\n  return React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    behavior: \"position\",\n    keyboardVerticalOffset: 30,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      Keyboard.dismiss();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Start a Nxxxew Game!\"), React.createElement(Card, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, React.createElement(BodyText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \"Select a Number\"), React.createElement(Input, {\n    style: styles.input,\n    blurOnSubmit: true,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    keyboardType: \"number-pad\",\n    maxLength: 2,\n    onChangeText: numberInputHandler,\n    value: enteredValue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: {\n      width: buttonWidth\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    title: \"Reset\",\n    onPress: resetInputHandler,\n    color: Colors.accent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }\n  })), React.createElement(View, {\n    style: {\n      width: buttonWidth\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    title: \"Confirm\",\n    onPress: confirmInputHandler,\n    color: Colors.primary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 19\n    }\n  })))), confirmedOutput))));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 10,\n    alignItems: \"center\"\n  },\n  title: {\n    fontSize: 20,\n    marginVertical: 10,\n    fontFamily: \"open-sans-bold\"\n  },\n  inputContainer: {\n    width: \"80%\",\n    maxWidth: \"95%\",\n    minWidth: 300,\n    alignItems: \"center\"\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 15\n  },\n  input: {\n    width: 50,\n    textAlign: \"center\"\n  },\n  summaryContainer: {\n    marginTop: 20,\n    alignItems: \"center\"\n  },\n  text: {\n    fontFamily: \"open-sans-regular\"\n  }\n});\nexport default StartGameScreen;","map":{"version":3,"sources":["/Users/khaleef/Practice Session/GuessGame-ReactNative/screens/StartGameScreen.js"],"names":["React","useState","useEffect","Card","Input","NumberContainer","Colors","BodyText","MainButton","StartGameScreen","props","enteredValue","setEnteredValue","confirmed","setConfirmed","selectedNumber","setSelectedNumber","Dimensions","get","width","buttonWidth","setbuttonWidth","numberInputHandler","intputText","replace","resetInputHandler","updateLayout","addEventListener","removeEventListener","confirmInputHandler","chosenNumber","parseInt","isNaN","Alert","alert","text","style","onPress","Keyboard","dismiss","confirmedOutput","styles","summaryContainer","onStartGame","screen","title","inputContainer","input","buttonContainer","accent","primary","StyleSheet","create","flex","padding","alignItems","fontSize","marginVertical","fontFamily","maxWidth","minWidth","flexDirection","justifyContent","paddingHorizontal","textAlign","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TextInput,\n  Button,\n  TouchableWithoutFeedback,\n  Keyboard,\n  Alert,\n  Dimensions,\n  ScrollView,\n  KeyboardAvoidingView,\n} from \"react-native\";\n\nimport Card from \"../components/Card\";\nimport Input from \"../components/Input\";\nimport NumberContainer from \"../components/NumberContainer\";\nimport Colors from \"../constants/Colors\";\nimport BodyText from \"../components/BodyText\";\nimport MainButton from \"../components/MainButton\";\n\nconst StartGameScreen = (props) => {\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [confirmed, setConfirmed] = useState(false);\n  const [selectedNumber, setSelectedNumber] = useState();\n  const [buttonWidth, setbuttonWidth] = useState(Dimensions.get(\"window\").width / 4);\n\n  const numberInputHandler = (intputText) => {\n    setEnteredValue(intputText.replace(/[^0-9]/g, \"\"));\n  };\n\n  const resetInputHandler = () => {\n    setEnteredValue(\"\");\n    setConfirmed(false);\n  };\n\n  useEffect(() => {\n    const updateLayout = () => {\n      setbuttonWidth(Dimensions.get(\"window\").width / 4)\n    }\n  \n    Dimensions.addEventListener('change', updateLayout)  \n\n    return () => {\n      Dimensions.removeEventListener('change', updateLayout)\n    }\n  })\n\n  const confirmInputHandler = () => {\n    const chosenNumber = parseInt(enteredValue);\n    if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\n      Alert.alert(\n        \"Invalid Number\",\n        \"Number has to be a number between 1 and 99.\",\n        [{ text: \"OK\", style: \"destructive\", onPress: resetInputHandler }]\n      );\n      return;\n    }\n    setConfirmed(true);\n    setSelectedNumber(chosenNumber);\n    setEnteredValue(\"\");\n    Keyboard.dismiss();\n  };\n\n  let confirmedOutput;\n  if (confirmed) {\n    confirmedOutput = (\n      <Card style={styles.summaryContainer}>\n        <BodyText>You Selected</BodyText>\n        <NumberContainer>{selectedNumber}</NumberContainer>\n        {/* <Button title=\"START GAME\" onPress={() => props.onStartGame(selectedNumber)}/> */}\n        <MainButton onPress={() => props.onStartGame(selectedNumber)}>\n          START GAME\n        </MainButton>\n      </Card>\n    );\n  }\n\n  return (\n    <ScrollView>\n      <KeyboardAvoidingView behavior='position' keyboardVerticalOffset={30} >\n        <TouchableWithoutFeedback\n          onPress={() => {\n            Keyboard.dismiss();\n          }}\n        >\n          <View style={styles.screen}>\n            <Text style={styles.title}>Start a Nxxxew Game!</Text>\n            <Card style={styles.inputContainer}>\n              <BodyText>Select a Number</BodyText>\n              <Input\n                style={styles.input}\n                blurOnSubmit\n                autoCapitalize=\"none\"\n                autoCorrect={false}\n                keyboardType=\"number-pad\"\n                maxLength={2}\n                onChangeText={numberInputHandler}\n                value={enteredValue}\n              />\n              <View style={styles.buttonContainer}>\n                <View style={{width: buttonWidth}}>\n                  <Button\n                    title=\"Reset\"\n                    onPress={resetInputHandler}\n                    color={Colors.accent}\n                  />\n                </View>\n                <View style={{width: buttonWidth}}>\n                  <Button\n                    title=\"Confirm\"\n                    onPress={confirmInputHandler}\n                    color={Colors.primary}\n                  />\n                </View>\n              </View>\n            </Card>\n            {confirmedOutput}\n          </View>\n        </TouchableWithoutFeedback>\n      </KeyboardAvoidingView>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 10,\n    alignItems: \"center\",\n    //justifyContent: 'flex-start' //comment this bcz by default its start from top\n  },\n  title: {\n    fontSize: 20,\n    marginVertical: 10,\n    fontFamily: \"open-sans-bold\",\n  },\n  inputContainer: {\n    width: \"80%\",\n    maxWidth: \"95%\",\n    minWidth: 300,\n    alignItems: \"center\",\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 15,\n  },\n  // button: {\n  //   //width: 100\n  //   width: Dimensions.get(\"window\").width / 4,\n  // },\n  input: {\n    width: 50,\n    textAlign: \"center\",\n  },\n  summaryContainer: {\n    marginTop: 20,\n    alignItems: \"center\",\n  },\n  text: {\n    fontFamily: \"open-sans-regular\",\n  },\n});\n\nexport default StartGameScreen;\n"]},"metadata":{},"sourceType":"module"}